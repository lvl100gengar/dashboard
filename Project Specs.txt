Database Specs
==============
A MySQL 8.0.37 has been setup and the following database and table have been created:

CREATE TABLE dashboard.transactions (
    transaction_id CHAR(36) NOT NULL,
    username VARCHAR(50) NOT NULL,
    file_name VARCHAR(255) NOT NULL,
    file_size BIGINT NOT NULL,
    ingress_server VARCHAR(100) NOT NULL,
    ingress_time DATETIME(3) NOT NULL,
    egress_server VARCHAR(100),
    egress_time DATETIME(3),
    status ENUM('BAD_REQUEST', 'SUBMITTED', 'COMPLETE', 'TIMEOUT', 'EP_UNAVAILABLE', 'CD_UNAVAILABLE') NOT NULL,
    PRIMARY KEY (transaction_id),
    INDEX idx_username (username),
    INDEX idx_status (status),
    INDEX idx_ingress_time (ingress_time)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;



Application Features
====================
The app is a website that displays realtime tracking and stats about transactions using the database table defined above.
The database already exists and is populated by another application, so this application is primarily going to read it and 
provide the monitoring dashboard and report generation capabilities.

1. Use Python 3 to create a responsive, performant, and maintainable web application. Use best practices for Python 3 code.
Make use of styles and icons to create a compelling application. Application will not have access to the internet so 
ensure any external resources are available offline. Use Flask as the web framework and Tailwind for the CSS.

Make sure the website works even if no database connectivity has been established and indicate connection attempts/errors 
gracefully.

When developing the application, assume that the database already exists and does not need to be created.

2. Authentication is handled externally so the application need not include authentication, user accounts, permissions, etc.

3. The primary use case is a dashboard which displays realtime statistics and tracking for the last 10, 30 or 60 seconds.
Show the distribution of the various transaction status. Calculate the data rate and transactions per second. Calculate the 
min, max, average, p90, p95, and p99 percentiles for all transactions with COMPLETE and EP_UNAVAILABLE status (all of these 
transactions are guaranteed to have an egress_time for this calculation). Round all stats to 1 decimal place.

4. Also show a table of the most recent transactions, refreshed at the same rate as the stats section. Include filters on 
username and status. Allow user to select the max number of items displayed (50 default, 100, or 200). Columns should include 
username, file name, file size, ingress time, egress time, transit time (egress time - ingress time) and status. Also include 
a button/link to allow copying an entire record. Make use of color and style to create visually distinct rows based on status.

Username filter should be populated with the distinct usernames present in the data set.

5. Build a form that allows the user to generate reports from the database in a user-friendly manner. Options for the report 
are datetime range and username (or all users) and report format(s). Default options are daterange corresponding to the last 
24 hours and all users. Report format options should include CSV and HTML. The CSV output is a direct output of the database 
table with headers. The HTML report should begin with a statistics section for all data in the report, including total 
files/bytes transferred, min/max/average data rates, min/max/average transit times, and breakdown of status. All calculated 
stats should include standard deviation figures where it makes sense. Next, show the same stats and data for each distinct 
username in the dataset.

6. Show a realtime database connection status indicator with the time of the most recent check. Include options to manage the 
database, such as deleting all data. Database queries (including automatic refreshes) should happen asynchronously in the 
background without reloading the page in the browser or impacting page load times.

7. Use an .env file to store environment variables, including database connection info.